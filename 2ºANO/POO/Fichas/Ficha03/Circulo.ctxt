#BlueJ class context
comment0.target=Circulo
comment0.text=\r\n\ Classe\ que\ implementa\ um\ Circulo\ \r\n
comment1.params=
comment1.target=Circulo()
comment1.text=\r\n\ Construtor\ por\ omiss\u00E3o\ de\ Circulo\r\n
comment10.params=cx\ cy
comment10.target=void\ alteraCentro(double,\ double)
comment10.text=\r\n\ Altera\ o\ posicionamento\ do\ circulo\r\n\ \ @param\ cx\ novo\ valor\ de\ x\r\n\ \ @param\ cy\ novo\ valor\ de\ y.\ \r\n
comment11.params=
comment11.target=double\ calculaArea()
comment11.text=\r\n\ Calcula\ a\ \u00E1rea\ do\ circulo\r\n\ @return\ double\ com\ o\ valor\ da\ \u00E1rea\r\n
comment12.params=
comment12.target=double\ calculaPerimetro()
comment12.text=\r\n\ Calcula\ o\ per\u00EDmetro\ do\ circulo\r\n\ @return\ double\ com\ o\ valor\ do\ per\u00EDmetro\r\n
comment13.params=
comment13.target=java.lang.String\ toString()
comment13.text=\r\n\ M\u00E9todo\ que\ devolve\ a\ representa\u00E7\u00E3o\ em\ String\ do\ Circulo.\r\n\ @return\ String\ com\ as\ vari\u00E1veis\ x,\ y\ e\ raio\r\n
comment14.params=o
comment14.target=boolean\ equals(java.lang.Object)
comment14.text=\r\n\ \ M\u00E9todo\ que\ determina\ se\ dois\ circulos\ s\u00E3o\ iguais.\r\n\ \ @return\ booleano\ que\ \u00E9\ verdadeiro\ se\ os\ valores\ das\ tr\u00EAs\ vari\u00E1veis\ forem\ iguais\ \r\n
comment15.params=
comment15.target=Circulo\ clone()
comment15.text=\r\n\ \ M\u00E9todo\ que\ faz\ uma\ c\u00F3pia\ do\ objecto\ receptor\ da\ mensagem\ para\ tal\ invoca\ o\ construtor\ de\ c\u00F3pia\r\n\ \ @return\ objecto\ clone\ do\ objecto\ que\ recebe\ a\ mensagem.\ \r\n
comment2.params=cx\ cy\ raio
comment2.target=Circulo(double,\ double,\ double)
comment2.text=\r\n\ Construtor\ parametrizado\ de\ Circulo\r\n\ Aceita\ como\ par\u00E2metros\ os\ valores\ para\ cada\ coordenada\ e\ o\ seu\ raio\r\n
comment3.params=outro
comment3.target=Circulo(Circulo)
comment3.text=\r\n\ Construtor\ de\ c\u00F3pia\ de\ Circulo\r\n\ Aceita\ como\ par\u00E2metro\ outro\ Circulo\ e\ utiliza\ os\ m\u00E9todos\ de\ acesso\ aos\ valores\ das\ vari\u00E1veis\ de\ inst\u00E2ncia.\ \r\n
comment4.params=
comment4.target=double\ getX()
comment4.text=\r\n\ Devolve\ o\ valor\ da\ vari\u00E1vel\ x\r\n\ @return\ valor\ de\ x\r\n
comment5.params=
comment5.target=double\ getY()
comment5.text=\r\n\ Devolve\ o\ valor\ da\ vari\u00E1vel\ y\r\n\ @return\ valor\ de\ y\r\n
comment6.params=
comment6.target=double\ getRaio()
comment6.text=\r\n\ Devolve\ o\ valor\ da\ vari\u00E1vel\ raio\r\n\ @return\ valor\ do\ raio\r\n
comment7.params=cx
comment7.target=void\ setX(double)
comment7.text=\r\n\ Altera\ o\ valor\ da\ vari\u00E1vel\ x\r\n\ @param\ cx\ novo\ valor\ do\ x.\r\n
comment8.params=cy
comment8.target=void\ setY(double)
comment8.text=\r\n\ Altera\ o\ valor\ da\ vari\u00E1vel\ y\r\n\ @param\ cy\ novo\ valor\ do\ y.\r\n
comment9.params=newRaio
comment9.target=void\ setRaio(double)
comment9.text=\r\n\ Altera\ o\ valor\ da\ vari\u00E1vel\ raio\r\n\ @param\ newRaio\ novo\ valor\ do\ raio.\ \r\n
numComments=16
