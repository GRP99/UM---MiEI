-> Apresenta√ß√£o dos crit√©rios de avalia√ß√£o (sujeito altera√ß√µes)
        Tp 1-> aquecimento de Python
        2-> modulos PY + EXPLN
        3-> geral PLN script ... Livre
        +
        Participa√ß√£o na aula + tpc
        +
        Teste individual


-> Corre√ß√£o do tpc
        Base o tcp do Rodrigo Pimentel

    Explica√ß√£o sobre o o map e o filter

    map -> f list    [ f(x) | x ‚àà  lista ]
    filter -> pred lista [ x | x ‚àà lista : pred(x) ]

    listas em compreens√£o
                [ f(x) | x ‚àà lista : pred(x) ]
                [ f(x) for x in lista if pred(x) ]
                {  :  for x in ...}
                ( f(x) for x in lista )  <- iterador

    Cria√ß√£o de um exemplo destas listas no tpc analisado.

-> Testes com a fun√ß√£o range (rip pc do Rodrigo ü•≤ )

-> Cria√ß√£o de um tipo estruturado para guardar uma gram√°tica de uma frase


-> TPC 
    Gram√°ticas 
        "np" : "!f1.txt"     

        "s" : "!prov"
        "s": ["comosecostumadizer""!prov"]
           : idf 

def idt ():
    i= choise(1..50)
    return i

f1.txt { jo√£o, manuel, j Bernardo Barros }


encontrar um caso de estudo realista de gerador de coisas convincentes