var http = require("http");
var axios = require("axios");
var fs = require("fs");
var static = require("./static.js");
var { parse } = require("querystring");

// Funcao auxiliar
function recuperaInfo(request, callback) {
  if (request.headers["content-type"] == "application/x-www-form-urlencoded") {
    let body = "";
    request.on("data", (bloco) => {
      body += bloco.toString();
    });
    request.on("end", () => {
      console.log(body);
      callback(parse(body));
    });
  }
}

function geraPagPerfil(perfis){
    let pagHTML = `
    <html>
        <head>
            <title>Projeto SelRA</title>
            <meta charset="utf-8"/>
            <link rel="stylesheet" href="w3.css"/>
            <link rel="icon" href="favicon.png"/>
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
            <script src="https://code.jquery.com/jquery-3.4.1.min.js" ></script>
            <script type="text/javascript" src="funcoes.js" ></script>
        </head>
        <body>
            <div class="w3-container w3-blue-grey">
                <h3 style="text-align: center;">
                    PERFIS NA SALA DE AULA
                </h3>
            </div>
            <table class="w3-table w3-bordered" class="w3-table w3-bordered" style='font-size:80%'>
            <tr>
                <th> <h4> Perfil </h4> </th>
                <th> <h4> Características </h4> </th>
            </tr>`;
    perfis.forEach(p => {
        pagHTML += `
                <tr>
                    <td> <b> ${p.perfil} </b> </td>
                    <td>${p.carateristicas}</td>
                </tr>
          `;
    })
    pagHTML += `
        </table>
            <div id = "container"></div>
            <div class="w3-container w3-blue-grey">
                <address>Generated by Grupo 10, <span id="data"></span>, <a href="/">Voltar à Página Inicial</a></address>
            </div>
            <script>
                var d= new Date();
                $("#data").text(d.toISOString().substr(0,10));
            </script>
        </body>
    </html>`;               
    return pagHTML;
}

function gerarecursos(r, ensinamentos, conc) {
  let pagHTML = `
    <html>
        <head>
            <title>Projeto SelRA</title>
            <meta charset="utf-8"/>
            <link rel="stylesheet" href="w3.css"/>
            <link rel="icon" href="favicon.png"/>
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
            <script src="https://code.jquery.com/jquery-3.4.1.min.js" ></script>
            <script type="text/javascript" src="funcoes.js" ></script>
        </head>
        <body>
              <div class="w3-container w3-blue-grey">
                  <h3 style="text-align: center;">
                      RECURSOS DE PROGRAMAÇÃO
                  </h3>
              </div>

              <table class="w3-table w3-bordered" class="w3-table w3-bordered" style='font-size:80%'>
              <tr>
                    <th>Id Recurso</th>
                    <th>Tipo Recurso</th>
                    <th>Definição do Recurso</th>
                    <th>Intervalo de Idades</th>
                    <th>Características</th>
                    <th>Conceitos associados</th>
                </tr>
    `;
    r.forEach((rec) => {
        var conceitos = [];
        ensinamentos.forEach((ensi) => {
            if (ensi.recurso == rec.id) {
                conceitos.push(ensi.conceito);
            }
        });
        var idades = "[" + rec.idade_ideal + "]";
        pagHTML += `
            <tr>
                <td style="vertical-align:center">${rec.id}</a></td>
                <td style="vertical-align:center">${rec.tipo}</a></td>
                <td style="vertical-align:center">${rec.descricao}</td>
                <td style="vertical-align:center">${idades}</td>
                <td style="vertical-align:center">${rec.perfis}</td>
                <td style="vertical-align:center">
                    <ul>`;
                        conceitos.forEach((c) => {
                            conc.forEach((c_a) => {
                                if (c == c_a.id) {
                                    pagHTML += `<li> ${c_a.descricao} </li>`;
                                }
                            });
                        });
        pagHTML += `
                    </ul>
                </td>
            </tr>`;
    });
    pagHTML += `
        </table>
        <div id = "container"></div>
        <div class="w3-container w3-blue-grey">
            <address>Generated by Grupo 10, <span id="data"></span>, <a href="/">Voltar à Página Inicial</a></address>
        </div>
        <script>
            var d= new Date();
            $("#data").text(d.toISOString().substr(0,10));
        </script>
    </body>
    </html>
    `;
  return pagHTML;
}

function geraalunos(a, dataV) {
  let pagHTML = `
    <html>
        <head>
            <title>Projeto SelRA</title>
            <meta charset="utf-8"/>
            <link rel="stylesheet" href="w3.css"/>
            <link rel="icon" href="favicon.png"/>
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
            <script src="https://code.jquery.com/jquery-3.4.1.min.js" ></script>
            <script src="https://cdn.anychart.com/releases/8.0.0/js/anychart-base.min.js">>/script>
            <script type="text/javascript" src="funcoes.js" ></script>
        </head>
        <body>
                <div class="w3-container w3-blue-grey">
                    <h3 style="text-align: center;">
                        ALUNOS INSCRITOS
                    </h3>
                </div>

                <table class="w3-table w3-bordered" style='font-size:80%'>
                <tr>
                    <th>Id Aluno</th>
                    <th>Nome</th>
                    <th>Idade</th>
                    <th>Características</th>
                </tr>
    `;
    a.forEach((aluno) => {
        pagHTML += `
                <tr>
                    <td>${aluno.id}</a></td>
                    <td>${aluno.nome}</td>
                    <td>${aluno.idade}</td>
                    <td>${aluno.carateristicas}</td>
                </tr> `;
    });
    pagHTML += `
            </table>
                <div id="container" style="width: 75%; height: 75%; margin-left: auto; margin-right: auto;"></div>
                <div id = "container"></div>
                <div class="w3-container w3-blue-grey">
                    <address>Generated by Grupo 10, <span id="data"></span>, <a href="/">Voltar à Página Inicial</a></address>
                </div>

            <script>
                var d= new Date();
                $("#data").text(d.toISOString().substr(0,10));

                anychart.onDocumentReady(function() {
                    // create the chart
                    var chart = anychart.bar();

                    // turn on chart animation
                    chart.animation(true);

                    var data = ${dataV}

                    // add the data
                    chart.data(data);

                    // set the padding between column groups
                    chart.barGroupsPadding(0.5);

                    var yScale = chart.yScale();
                    yScale.minimum(0);
                    yScale.maximum(10);
                    yScale.ticks().interval(2);
                    yScale.minorTicks().interval(2);

                    var labels = chart.xAxis().labels();
                    labels.enabled(false);
               
                    // set series labels text template
                    var seriesLabels = chart.getSeries(0).labels().enabled(true);
                    seriesLabels.format("{%x}");
                    chart.getSeries(0).fill("#778899");

                    // axes titles
                    chart.xAxis().title('Características');
                    chart.yAxis().title('Alunos');
         
                    // set the chart title
                    chart.title("Características distribuídas pelos Alunos");
         
                    // draw
                    chart.container("container");
                    chart.draw();
                });
          </script>

      </body>

    </html> `;
  return pagHTML;
}

function geraFim() {
  return `
        </div>            
        <div class="w3-container w3-blue-grey">
            <address>Generated by Grupo 10, <span id="date"></span>, <a href="http://www4.di.uminho.pt/~prh/">Professor PRH</a></address>
        </div>
        <script>
            var d= new Date();
            $("#date").text(d.toISOString().substr(0,10));
        </script>
    </body>
    </html> `;
}

function geraError() {
    return `
          </div>
          <div style="border:1px solid black; margin:15px; font-size:80%;"> `;
  }

function geraIndex(conceitos) {
    let p = `
      <html>
          <head>
              <title>Projeto SelRA</title>
              <meta charset="utf-8"/>
              <link rel="stylesheet" href="w3.css"/>
              <link rel="icon" href="favicon.png"/>
              <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
              <script src="https://code.jquery.com/jquery-3.4.1.min.js" ></script>
              <script type="text/javascript" src="funcoes.js" ></script>
              <style>
                  #wrapper {
                      display: flex;
                  }
                  #left {
                      flex: 0 0 75%;
                  }              
                  #right {
                      flex: 1;
                  }
              </style>
          </head>
  
          <body>
              <div class="w3-container w3-blue-grey">
                  <h2>Projeto SelRA</h2>
              </div>
              
                <div id="wrapper">
                    <div id="left">
                        <ul> <h4> Índice </h4>
                            <li> <a href="/recursos/"> Recursos disponíveis </a> </li>
                            <li> <a href="/alunos/"> Alunos inscritos </a> </li>
                            <li> <a href="/perfis/"> Perfis existentes </a> </li>
                        </ul>
                    </div>
  
                    <div id="right" style="border-style: double; margin:15px; font-size:90%;" >
                        <ul> <h4> Conceitos de Programação </h4> `;

    conceitos.forEach((c) => {
        p += `<li> ${c.descricao} </li>`;
    });

    p += `              </ul>
                    </div>
                </div>
                <div style="border:1px solid black; margin:15px; font-size:80%;"> `;
    return p;
  }

// Servidor
var tarefaServer = http.createServer(function (req, res) {
    var d = new Date().toISOString().substr(0, 16);
    console.log(req.method + " " + req.url + " " + d);

    // Recurso estatico
    if (static.recursoEstatico(req)) {
        static.sirvoRecursoEstatico(req, res);
    } else {
        switch (req.method) {
            case "GET":
                if (req.url == "/") {
                    var requestAlunos = axios.get( "http://localhost:3000/alunos?_sort=id,nome&_order=asc,desc");
                    var requestConceitos = axios.get("http://localhost:3000/conceitos?_sort=descricao&_order=asc");
                    var cond = 1;
                    axios.all([requestAlunos, requestConceitos])
                        .then(
                            axios.spread((...response) => {
                                var conceitos = response[1].data;
                                fs.readFile("./output.html", function (err, data) {
                                    if (err) {
                                        res.writeHead(200, { "Content-Type": "text/html" });
                                        res.write("<p> Ficheiro de respostas inexistente. </p>");
                                        res.end();
                                    } else {
                                        fs.readFile("./error.html", function (err1, data1) {
                                            res.writeHead(200, { "Content-Type": "text/html" });
                                            res.write(geraIndex(conceitos));
                                            res.write(data);
                                            res.write(geraError());
                                            res.write(data1);
                                            res.write(geraFim());
                                            res.end();
                                        });
                                    }
                                });
                            })
                        )
                        .catch(function (erro) {
                            res.writeHead(200, { "Content-Type": "text/html;charset=utf-8" });
                            res.write("<p>ERROR: Não foi possível obter a página inicial...");
                            res.end();
                        });
                } 
                else if (req.url == "/alunos/") {
                    var requestAlunos = axios.get("http://localhost:3000/alunos?_sort=nome&_order=asc");
                    axios.all([requestAlunos])
                        .then(
                            axios.spread((...response) => {
                                var alunos = response[0].data;
                                var data = {
                                    header: ["Característica", "Número de Alunos"],
                                    rows: [[]],
                                };
                                alunos.forEach((a) => {
                                    car_aluno = a.carateristicas;
                                    car_aluno.forEach((c) => {
                                        cond = 1;
                                        while (cond == 1) {
                                            data.rows.forEach((r) => {
                                                if (r.includes(c)) {
                                                    var nmr = r[1];
                                                    r[1] = nmr + 1;
                                                    cond = 0;
                                                }
                                            });
                                            if (cond == 1) {
                                                var tup = [c, 1];
                                                data.rows.push(tup);
                                                cond = 0;
                                            }
                                        }
                                    });
                                });
                                var hd = '["Característica", "Número de Alunos"]';
                                var rw = "[";
                                data.rows.splice(0, 1);
                                data.rows.forEach((row) => {
                                    if (row != data.rows[data.rows.length - 1]){
                                        rw = rw + '["' + row[0] + '",' + row[1] + "],";
                                    }  
                                    else{ 
                                        rw = rw + '["' + row[0] + '",' + row[1] + "]";
                                    }
                                });
                                rw = rw + "]";
                                var dataStr = "{ header: " + hd + ", rows: " + rw + "}";
                                res.writeHead(200, {"Content-Type": "text/html;charset=utf-8",});
                                res.write(geraalunos(alunos, dataStr));
                                res.end();
                            })
                        )
                        .catch(function (erro) {
                            res.writeHead(200, { "Content-Type": "text/html;charset=utf-8" });
                            res.write("<p>ERRO: A obter a lista de alunos...");
                            res.end();
                        });
                } 
                else if (req.url == "/recursos/") {
                    var requestRecursos = axios.get("http://localhost:3000/recursos?_sort=id,descricao&_order=asc,desc");
                    var requestEnsi = axios.get("http://localhost:3000/ensinamentos?");
                    var RecursosConceitos = axios.get("http://localhost:3000/conceitos?_sort=id,descricao&_order=asc,desc");
                    axios.all([requestRecursos, requestEnsi, RecursosConceitos])
                        .then(
                            axios.spread((...response) => {
                                var recursos = response[0].data;
                                var ensinamentos = response[1].data;
                                var all_conceitos = response[2].data;
                                res.writeHead(200, {"Content-Type": "text/html;charset=utf-8",});
                                res.write(gerarecursos(recursos, ensinamentos, all_conceitos));
                                res.end();
                            })
                        )
                        .catch(function (erro) {
                            res.writeHead(200, { "Content-Type": "text/html;charset=utf-8" });
                            res.write("<p>ERROR: A obter a lista de recursos...");
                            res.end();
                        });
                }
                else if(req.url == "/perfis/"){
                    axios.get("http://localhost:3000/perfis?_sort=perfil")
                        .then( response => {
                            let perfis = response.data;
                            res.writeHead(200, { 'Content-Type': 'text/html;charset=utf-8' })
                            res.write(geraPagPerfil(perfis))
                            res.end()
                        })                                            
                        .catch(function (erro) {
                            res.writeHead(200, { 'Content-Type': 'text/html;charset=utf-8' })
                            res.write("<p>Não foi possível obter a página dos perfis...")
                            res.end()
                        })
                }
                break;
            default:
                res.writeHead(200, { "Content-Type": "text/html;charset=utf-8" });
                res.write("<p>" + req.method + " não suportado.</p>");
                res.end();
        }
    }
});

tarefaServer.listen(7777);

console.log("Servidor à escuta na porta 7777...");