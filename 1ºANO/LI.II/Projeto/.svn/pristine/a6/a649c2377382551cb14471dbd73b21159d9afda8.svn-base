#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "cgi.h" 
#include "estado.h"
#include <unistd.h>
	
#define MAX_BUFFER      10240
#define GRELHA      4
#define TAM     55
#define FALSE 0
#define TRUE  1
#define PATH_TABULEIROS "/var/www/html/tabuleiros/"
#define PATH_ESTADOS "/var/www/html/estados/"
#define PATH_LINK "http://localhost/cgi-bin/GandaGalo65?"


/**
Função que grava o estado atual do ficheiro
@param e Estado atual do tabuleiro
@param user Nome do jogador
*/
void gravar_estado_ficheiro(ESTADO e, char *user){
	char *estado;
	char filename[100];
	sprintf(filename,"%s%s_estado.txt",PATH_ESTADOS,user);
	FILE *fp = fopen(filename,"w");
	estado = estado2str(e);
	fprintf(fp,"%s",estado);
	fclose(fp);
}

/**
Função que efetua a acao "Undo"
@param e Estado atual do jogo
@returns e Estado com a undo executada
*/
ESTADO undo(ESTADO e){
	int i=0,j=(e.num_jog+1);
	if (j==0){return e;}
	else{
	char nomef_estado[100],nomef_estadoNW[100],linha[MAX_BUFFER];
	sprintf(nomef_estado,"%sundo.txt",PATH_ESTADOS);
	sprintf(nomef_estadoNW,"%snew.txt",PATH_ESTADOS);
	FILE *fp, *new;
	fp=fopen(nomef_estado,"r");
	new=fopen(nomef_estadoNW, "w");
	while (i<j){
		fscanf(fp,"%s",linha);
		fprintf(new,"%s\n",linha);
		i++;
	}
	e = str2estado(linha);
	e.num_jog=(j-1);
	gravar_estado_ficheiro(e,e.user);
	fclose(fp);
	fclose(new);
	unlink(nomef_estado);
	rename(nomef_estadoNW, nomef_estado);
	return e;
	}
}

void debug(char *teste){
	char nomeFicheiro[100];
	sprintf(nomeFicheiro,"%sdebug.txt",PATH_ESTADOS);
	FILE *fp = fopen(nomeFicheiro,"a");
	fprintf(fp,"%s\n",teste);
	fclose(fp);
}

/**
Função que grava o Undo num ficheiro
@param e Estado atual do jogo
@returns e Estado com a undo executada
*/
void gravar_undo_ficheiro(ESTADO e){
	char nomeFicheiro[100];
	sprintf(nomeFicheiro,"%sundo.txt",PATH_ESTADOS);
	FILE *fp = fopen(nomeFicheiro,"a");
	fprintf(fp,"%s\n",estado2str(e));
	fclose(fp);
}

/**
Função que lê o estado atual do ficheiro
@param filename Nome do ficheiro
@returns e Novo Estado
*/
ESTADO ler_estado_ficheiro(char *filename){
	char est[MAX_BUFFER];	
	FILE *fp=fopen(filename,"r");
	fscanf(fp,"%s",est);
	fclose(fp);
	return str2estado(est);
}

/**
Função para o auxilio da ação ancora que le o estado do ficheiro
@param e Estado
@returns e Estado 
*/
ESTADO ler_ancora_ficheiro(ESTADO e){
	char est[MAX_BUFFER],filename[100];
	sprintf(filename,"%sancora.txt",PATH_ESTADOS);
	FILE *fp=fopen(filename,"r");
	fscanf(fp,"%s",est);
	if (est[0] == '\0'){return e;}
	fclose(fp);
	return str2estado(est);
}

/**
Função para o auxilio da ação ancora que grava o estado num ficheiro 
@param e Estado atual do ficheiro
*/
void gravar_ancora_ficheiro(ESTADO e){
	char *estado;
	char filename[100];
	sprintf(filename,"%sancora.txt",PATH_ESTADOS);
	FILE *fp = fopen(filename,"w");
	estado = estado2str(e);
	fprintf(fp,"%s",estado);
	fclose(fp);
}