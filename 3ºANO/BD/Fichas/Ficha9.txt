1- liste todos os documentos na coleção restaurants.
db.restaurants.find();

2- liste apenas os campos restaurante_id, name, borough e cuisine para todos os documentos na coleção.
db.restaurants.find({},{"restaurant_id" : 1,"name":1,"borough":1,"cuisine" :1});

3- liste os campos restaurante_id, name, borough e cuisine para todos os documentos na coleção, mas que exclua o campo _id.
db.restaurants.find({},{"restaurant_id" : 1,"name":1,"borough":1,"cuisine" :1, "_id":0});

4- liste os campos restaurante_id, name, borough e zipcode para todos os documentos na coleção, mas que exclua o campo _id.
db.restaurants.find({},{"restaurant_id" : 1,"name":1,"borough":1,"address.zip code" :1, "_id":0});

5- db.restaurants.find({"borough": "Bronx"}).pretty();

6- liste os primeiros 5 restaurantes que estão localizados no bairro (borough) "Bronx".
db.restaurants.find({"borough": "Bronx"}).pretty().limit(5);

7- liste os 5 restaurantes após dos primeiros 5 (do 6º ao 10º) que estão localizados no bairro (borough) "Bronx".
db.restaurants.find({"borough": "Bronx"}).pretty().skip(5).limit(5);

8- liste todos os restaurantes que têm uma pontuação (score) maior que 90.
db.restaurants.find({grades : { $elemMatch:{"score":{$gt : 90}}}});
db.restaurants.find({"grades.score":{$gt : 90}});

9- liste todos os restaurantes que têm uma pontuação (score) maior que 80 mas menor que 100.
db.restaurants.find({grades : { $elemMatch:{"score":{$gt : 80 , $lt :100}}}});

10- liste todos os restaurantes que estão localizados numa latitude (coord.0) menor que -95.754168.
db.restaurants.find({"address.coord.0" : {$lt : -95.754168}});

11- liste todos os restaurantes cujo tipo de cozinha (cuisine) não seja "American ", que a sua pontuação (score) seja maior que 70 e a latitude (address .coord.0) menor que -65.754168.
db.restaurants.find( {$and: [ {"cuisine": {$ne :"American "}}, {"grades.score" : {$gt : 70}},  {"address.coord" : {$lt : -65.754168}} ] });

12- liste todos os restaurantes cujo tipo de cozinha (cuisine) não seja "American ", que a sua pontuação (score) seja maior que 70 e a latitude (address .coord.0)  menor que -65.754168. Não utilizando o operador $and.
db.restaurants.find( {"cuisine" : {$ne : "American "}, "grades.score" :{$gt: 70}, "address.coord" : {$lt : -65.754168}});

13- liste todos os restaurantes cujo tipo de cozinha (cuisine) não seja to tipo "American " e que tenham atingido uma classificação (grade) de "A" mas que não pertençam ao bairro (borough) de "Brookly". Deverá ser apresentada de acordo com o tipo de cozinha (cuisine) em ordem descendente.
db.restaurants.find( { $and: [ {"cuisine" : {$ne :"American "}}, {"grades.grade" : "A"}, { "borough" : { $ne: "Brooklyn"} } ] }).sort({"cuisine":-1});

14- liste todos os restaurantes que pertençam ao bairro (borough) "Bronx" e cujo tipo de cozinha (cuisine) seja quer “American "  quer "Chinese".
db.restaurants.find( { "borough" : "Bronx" , $or : [ {"cuisine" : "American " }, {"cuisine" : "Chinese" } ] });

15- liste todos os restaurantes cujas coordenadas (address.coord) sejam do tipo double (type: 1).
db.restaurants.find( {"address.coord" :  {$type : 1} }  );

16- liste todos os restaurantes que contenham informação da rua (address.street).
db.restaurants.find( {"address.street" :   { $exists : true } });

17- liste todos os restaurantes de forma ascendente pelo tipo de cozinha (cuisine) e descendente pelo bairro (borough).
db.restaurants.find().sort({"cuisine":1,"borough" : -1,} );

18- liste o restaurant_id, name, address e localização geográfica (coord) para os restaurantes cujo segundo elemento do array da localização geográfica (coord) seja maior que 42 e até 52.
db.restaurants.find({"address.coord.1": {$gt : 42, $lte : 52}}, {"restaurant_id" : 1,"name":1,"address":1});

19- liste os restaurantes (restaurante_id, name, borough, cuisine) que não conseguiram uma pontuação (score) maior que 10.
db.restaurants.find({"grades.score" : { $not: {$gt : 10}}},{"restaurant_id" : 1,"name":1,"borough":1,"cuisine" :1});

20- liste todos os restaurantes (restaurante_id, name, borough e cuisine) que não pertencem ao bairro (borough) de "Staten Islan", ou "Queens" ou "Bronx" ou "Brooklin".
db.restaurants.find({"borough":{$nin:["StatenIsland","Queens","Bronx","Brooklyn"]}},{"restaurant_id":1,"name":1,"borough":1,"cuisine" :1});
